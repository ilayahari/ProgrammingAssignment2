source('G:/G/online certification courses coursera basic statistics/coursera r programming john hopkins university/meanvectorfunction.R')
x<-c(1,2,3)
makeVector(x)
x
class(X)
class(x)
makeVector(5)
source('G:/G/online certification courses coursera basic statistics/coursera r programming john hopkins university/Cachemean.R')
cachemean(x)
x<-list(1,"hari",3)
x
makeVector(x)
makeVector("hari",1,"sindhuja",3,"surya")
makeVector(c("hari",1,"sindhuja",3,"surya"))
cachemean(makeVector(x))
makeVector()
makeVector(list("hari",2,"sujay"))
makeVector$get
x<-makeVector(list("hari",2,"sujay"))
x$set()
x<-makeVector(c(1,2,3))
x
x$set(1,2,3)
x$set(c(1,2,3))
x$get()
x$setmean()
x$setmean(x)
x$getmean()
x$getmean(x)
source('G:/G/online certification courses coursera basic statistics/coursera r programming john hopkins university/makeCacheMatrix.R')
pmatrix<-makeCacheMatrix(matrix(1:4,nrow=2,ncol = 2))
pmatrix
pmatrix$set()
pmatrix$get()
pmatrix$getInverse()
cacheSolve(pmatrix)
pmatrix$getInverse()
source('~/GitHub/cachematrix.R')
pmatrix<-makeCacheMatrix(matrix(1:4,nrow=2,ncol = 2))
pmatrix$get()
pmatrix$getInverse()
cacheSolve(pmatrix)
pmatrix$getInverse()
source('~/GitHub/cachematrix.R')
source('~/GitHub/cachematrix.R')
pmatrix<-makeCacheMatrix(matrix(1:4,nrow=2,ncol = 2))
pmatrix$get()
pmatrix$getInverse()
cacheSolve(pmatrix)
pmatrix$getInverse()
